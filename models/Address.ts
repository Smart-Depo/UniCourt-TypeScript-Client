/**
 * UniCourt Enterprise APIs
 * <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Address object Data Schema
*/
export class Address {
    'object': string;
    /**
    * 1st part of the street address.
    */
    'streetAddress1': string | null;
    /**
    * 2nd part of the street address.
    */
    'streetAddress2': string | null;
    /**
    * City
    */
    'city': string | null;
    /**
    * State Name if present else default value.
    */
    'stateName': string;
    /**
    * State Code if the state is a US state else contains null.
    */
    'stateCode': string | null;
    /**
    * Country Name if present else default value.
    */
    'countryName': string;
    /**
    * ISO 3166-1 alpha-3 (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3#Officially_assigned_code_elements). Code of the country if country name is present.
    */
    'countryCode': string | null;
    /**
    * Zip code of the address.
    */
    'zip': string | null;
    /**
    * 4 digit extension of the zip code if the address is a US address.
    */
    'zip4': string | null;
    /**
    * Boolean indicating if the address is visible or not.
    */
    'isVisible': boolean;
    /**
    * Date at which this record is created in UniCourt.
    */
    'firstFetchDate': Date;
    /**
    * Date at which this record was updated in UniCourt.
    */
    'lastFetchDate': Date;
    /**
    * Coordinates at geographic coordinate system.
    */
    'latitude': number | null;
    /**
    * Coordinates at geographic coordinate system.
    */
    'longitude': number | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "object",
            "baseName": "object",
            "type": "string",
            "format": ""
        },
        {
            "name": "streetAddress1",
            "baseName": "streetAddress1",
            "type": "string",
            "format": ""
        },
        {
            "name": "streetAddress2",
            "baseName": "streetAddress2",
            "type": "string",
            "format": ""
        },
        {
            "name": "city",
            "baseName": "city",
            "type": "string",
            "format": ""
        },
        {
            "name": "stateName",
            "baseName": "stateName",
            "type": "string",
            "format": ""
        },
        {
            "name": "stateCode",
            "baseName": "stateCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "countryName",
            "baseName": "countryName",
            "type": "string",
            "format": ""
        },
        {
            "name": "countryCode",
            "baseName": "countryCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "zip",
            "baseName": "zip",
            "type": "string",
            "format": ""
        },
        {
            "name": "zip4",
            "baseName": "zip4",
            "type": "string",
            "format": ""
        },
        {
            "name": "isVisible",
            "baseName": "isVisible",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "firstFetchDate",
            "baseName": "firstFetchDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "lastFetchDate",
            "baseName": "lastFetchDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "latitude",
            "baseName": "latitude",
            "type": "number",
            "format": ""
        },
        {
            "name": "longitude",
            "baseName": "longitude",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Address.attributeTypeMap;
    }

    public constructor() {
    }
}

