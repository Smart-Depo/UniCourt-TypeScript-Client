/**
 * UniCourt Enterprise APIs
 * <button><a href=\"/enterpriseapi/download/UniCourt-Enterprise-API-Spec.yaml\" >Download UniCourt Enterprise APIs Specification</a></button> 
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { GetCase200ResponseDocketEntriesDocketEntryArrayInnerDocketEntryPrimaryDocuments } from '../models/GetCase200ResponseDocketEntriesDocketEntryArrayInnerDocketEntryPrimaryDocuments';
import { GetCase200ResponseDocketEntriesDocketEntryArrayInnerDocketEntrySecondaryDocuments } from '../models/GetCase200ResponseDocketEntriesDocketEntryArrayInnerDocketEntrySecondaryDocuments';
import { GetCase200ResponseDocketEntriesDocketEntryArrayInnerReferencedDocketNumberArrayInner } from '../models/GetCase200ResponseDocketEntriesDocketEntryArrayInnerReferencedDocketNumberArrayInner';
import { GetCase200ResponseSourceCaseDataSourcePageDataInnerAdditionalSourceData } from '../models/GetCase200ResponseSourceCaseDataSourcePageDataInnerAdditionalSourceData';
import { HttpFile } from '../http/http';

export class GetCase200ResponseDocketEntriesDocketEntryArrayInner {
    /**
    * Name of the object
    */
    'object': string;
    /**
    * Order number how the dockets have stored in UniCourt.
    */
    'sortOrder': number;
    /**
    * Docket Action Date
    */
    'docketEntryDate': Date;
    /**
    * The respective docket entry number which is defined in the court website.
    */
    'docketNumber': number | null;
    /**
    * Docket Badge helps you to know what type of a docket entry it is.
    */
    'docketBadge': GetCase200ResponseDocketEntriesDocketEntryArrayInnerDocketBadgeEnum;
    /**
    * Source Docket Entry
    */
    'text': string;
    'textStructured': GetCase200ResponseSourceCaseDataSourcePageDataInnerAdditionalSourceData | null;
    /**
    * Other Docket Numbers that referenced for a particular docket entry.
    */
    'referencedDocketNumberArray': Array<GetCase200ResponseDocketEntriesDocketEntryArrayInnerReferencedDocketNumberArrayInner>;
    'docketEntryPrimaryDocuments': GetCase200ResponseDocketEntriesDocketEntryArrayInnerDocketEntryPrimaryDocuments | null;
    'docketEntrySecondaryDocuments': GetCase200ResponseDocketEntriesDocketEntryArrayInnerDocketEntrySecondaryDocuments | null;
    /**
    * When this docket entry was last fetched from the source.
    */
    'lastFetchDate': string;
    /**
    * Determines if it is the first docket entry or the last docket entry. This value will be set only for the first and last docket entry. For other docket entries it will be null. However, this will be set as single_docket_entry when the Case contains only one docket entry.
    */
    'boundary': GetCase200ResponseDocketEntriesDocketEntryArrayInnerBoundaryEnum | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "object",
            "baseName": "object",
            "type": "string",
            "format": ""
        },
        {
            "name": "sortOrder",
            "baseName": "sortOrder",
            "type": "number",
            "format": ""
        },
        {
            "name": "docketEntryDate",
            "baseName": "docketEntryDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "docketNumber",
            "baseName": "docketNumber",
            "type": "number",
            "format": ""
        },
        {
            "name": "docketBadge",
            "baseName": "docketBadge",
            "type": "GetCase200ResponseDocketEntriesDocketEntryArrayInnerDocketBadgeEnum",
            "format": ""
        },
        {
            "name": "text",
            "baseName": "text",
            "type": "string",
            "format": ""
        },
        {
            "name": "textStructured",
            "baseName": "textStructured",
            "type": "GetCase200ResponseSourceCaseDataSourcePageDataInnerAdditionalSourceData",
            "format": ""
        },
        {
            "name": "referencedDocketNumberArray",
            "baseName": "referencedDocketNumberArray",
            "type": "Array<GetCase200ResponseDocketEntriesDocketEntryArrayInnerReferencedDocketNumberArrayInner>",
            "format": ""
        },
        {
            "name": "docketEntryPrimaryDocuments",
            "baseName": "docketEntryPrimaryDocuments",
            "type": "GetCase200ResponseDocketEntriesDocketEntryArrayInnerDocketEntryPrimaryDocuments",
            "format": ""
        },
        {
            "name": "docketEntrySecondaryDocuments",
            "baseName": "docketEntrySecondaryDocuments",
            "type": "GetCase200ResponseDocketEntriesDocketEntryArrayInnerDocketEntrySecondaryDocuments",
            "format": ""
        },
        {
            "name": "lastFetchDate",
            "baseName": "lastFetchDate",
            "type": "string",
            "format": ""
        },
        {
            "name": "boundary",
            "baseName": "boundary",
            "type": "GetCase200ResponseDocketEntriesDocketEntryArrayInnerBoundaryEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return GetCase200ResponseDocketEntriesDocketEntryArrayInner.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum GetCase200ResponseDocketEntriesDocketEntryArrayInnerDocketBadgeEnum {
    Docket = 'DOCKET',
    Charge = 'CHARGE',
    Hearing = 'HEARING',
    Judgement = 'JUDGEMENT',
    Financial = 'FINANCIAL',
    Disposition = 'DISPOSITION',
    Sentence = 'SENTENCE',
    Bond = 'BOND',
    Bail = 'BAIL',
    CauseOfAction = 'CAUSE_OF_ACTION',
    Arrest = 'ARREST',
    Warrant = 'WARRANT',
    Summon = 'SUMMON',
    Tickler = 'TICKLER',
    Opinion = 'OPINION'
}
export enum GetCase200ResponseDocketEntriesDocketEntryArrayInnerBoundaryEnum {
    First = 'first',
    Last = 'last',
    SingleDocketEntry = 'single_docket_entry',
    Null = 'null'
}

