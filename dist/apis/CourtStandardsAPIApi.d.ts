import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext, HttpInfo } from '../http/http';
import { AreaOfLaw1 } from '../models/AreaOfLaw1';
import { AttorneyRepresentationType1 } from '../models/AttorneyRepresentationType1';
import { AttorneyType1 } from '../models/AttorneyType1';
import { CaseClass1 } from '../models/CaseClass1';
import { CaseRelationshipType1 } from '../models/CaseRelationshipType1';
import { CaseStatus1 } from '../models/CaseStatus1';
import { CaseStatusGroup1 } from '../models/CaseStatusGroup1';
import { CaseType1 } from '../models/CaseType1';
import { CaseTypeGroup1 } from '../models/CaseTypeGroup1';
import { CauseOfAction1 } from '../models/CauseOfAction1';
import { CauseOfActionAdditionalData1 } from '../models/CauseOfActionAdditionalData1';
import { CauseOfActionGroup1 } from '../models/CauseOfActionGroup1';
import { Charge1 } from '../models/Charge1';
import { ChargeAdditionalData1 } from '../models/ChargeAdditionalData1';
import { ChargeDegree1 } from '../models/ChargeDegree1';
import { ChargeGroup1 } from '../models/ChargeGroup1';
import { ChargeSeverity1 } from '../models/ChargeSeverity1';
import { Court1 } from '../models/Court1';
import { CourtLocation1 } from '../models/CourtLocation1';
import { CourtLocationResponse1 } from '../models/CourtLocationResponse1';
import { CourtSystem1 } from '../models/CourtSystem1';
import { CourtType1 } from '../models/CourtType1';
import { GetAreasOfLaw200Response } from '../models/GetAreasOfLaw200Response';
import { GetAttorneyRepresentationTypes200Response } from '../models/GetAttorneyRepresentationTypes200Response';
import { GetAttorneyTypes200Response } from '../models/GetAttorneyTypes200Response';
import { GetCaseRelationshipTypes200Response } from '../models/GetCaseRelationshipTypes200Response';
import { GetCaseStatusGroups200Response } from '../models/GetCaseStatusGroups200Response';
import { GetCaseTypeGroups200Response } from '../models/GetCaseTypeGroups200Response';
import { GetCaseTypes200Response } from '../models/GetCaseTypes200Response';
import { GetCasesClass200Response } from '../models/GetCasesClass200Response';
import { GetCasesStatus200Response } from '../models/GetCasesStatus200Response';
import { GetCausesOfAction200Response } from '../models/GetCausesOfAction200Response';
import { GetCausesOfActionAdditionalData200Response } from '../models/GetCausesOfActionAdditionalData200Response';
import { GetCausesOfActionGroup200Response } from '../models/GetCausesOfActionGroup200Response';
import { GetChargeGroups200Response } from '../models/GetChargeGroups200Response';
import { GetCharges200Response } from '../models/GetCharges200Response';
import { GetChargesAdditionalData200Response } from '../models/GetChargesAdditionalData200Response';
import { GetChargesDegree200Response } from '../models/GetChargesDegree200Response';
import { GetChargesSeverity200Response } from '../models/GetChargesSeverity200Response';
import { GetCourtSystems200Response } from '../models/GetCourtSystems200Response';
import { GetCourtTypes200Response } from '../models/GetCourtTypes200Response';
import { GetCourts200Response } from '../models/GetCourts200Response';
import { GetCourtsServiceStatus200Response } from '../models/GetCourtsServiceStatus200Response';
import { GetCourtsServiceStatus200ResponseCourtServiceStatusArrayInner } from '../models/GetCourtsServiceStatus200ResponseCourtServiceStatusArrayInner';
import { GetJudgeTypes200Response } from '../models/GetJudgeTypes200Response';
import { GetPartyRoleGroups200Response } from '../models/GetPartyRoleGroups200Response';
import { GetPartyRoles200Response } from '../models/GetPartyRoles200Response';
import { JudgeType1 } from '../models/JudgeType1';
import { JurisdictionGeo1 } from '../models/JurisdictionGeo1';
import { JurisdictionGeoResponse1 } from '../models/JurisdictionGeoResponse1';
import { PartyRole1 } from '../models/PartyRole1';
import { PartyRoleGroup1 } from '../models/PartyRoleGroup1';
export declare class CourtStandardsAPIApiRequestFactory extends BaseAPIRequestFactory {
    getAppealCourtsForCourt(courtId: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getAreaOfLaw(areaOfLawId: string, _options?: Configuration): Promise<RequestContext>;
    getAreasOfLaw(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getAttorneyRepresentationType(attorneyRepresentationTypeId: string, _options?: Configuration): Promise<RequestContext>;
    getAttorneyRepresentationTypes(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getAttorneyType(attorneyTypeId: string, _options?: Configuration): Promise<RequestContext>;
    getAttorneyTypes(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCaseClass(caseClassId: string, _options?: Configuration): Promise<RequestContext>;
    getCaseRelationshipType(caseRelationshipTypeId: string, _options?: Configuration): Promise<RequestContext>;
    getCaseRelationshipTypes(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCaseStatus(caseStatusId: string, _options?: Configuration): Promise<RequestContext>;
    getCaseStatusGroup(caseStatusGroupId: string, _options?: Configuration): Promise<RequestContext>;
    getCaseStatusGroups(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCaseType(caseTypeId: string, _options?: Configuration): Promise<RequestContext>;
    getCaseTypeGroup(caseTypeGroupId: string, _options?: Configuration): Promise<RequestContext>;
    getCaseTypeGroups(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCaseTypes(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCasesClass(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCasesStatus(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCauseOfAction(causeOfActionId: string, _options?: Configuration): Promise<RequestContext>;
    getCauseOfActionAdditionalData(causeOfActionAdditionalDataId: string, _options?: Configuration): Promise<RequestContext>;
    getCauseOfActionGroup(causeOfActionGroupId: string, _options?: Configuration): Promise<RequestContext>;
    getCausesOfAction(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCausesOfActionAdditionalData(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCausesOfActionGroup(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCharge(chargeId: string, _options?: Configuration): Promise<RequestContext>;
    getChargeAdditionalData(chargeAdditionalDataId: string, _options?: Configuration): Promise<RequestContext>;
    getChargeDegree(chargeDegreeId: string, _options?: Configuration): Promise<RequestContext>;
    getChargeGroup(chargeGroupId: string, _options?: Configuration): Promise<RequestContext>;
    getChargeGroups(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getChargeSeverity(chargeSeverityId: string, _options?: Configuration): Promise<RequestContext>;
    getCharges(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getChargesAdditionalData(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getChargesDegree(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getChargesSeverity(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCourt(courtId: string, _options?: Configuration): Promise<RequestContext>;
    getCourtLocation(courtLocationId: string, _options?: Configuration): Promise<RequestContext>;
    getCourtLocations(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCourtLocationsForCourt(courtId: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCourtServiceStatus(courtServiceStatusId: string, _options?: Configuration): Promise<RequestContext>;
    getCourtSystem(courtSystemId: string, _options?: Configuration): Promise<RequestContext>;
    getCourtSystems(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCourtType(courtTypeId: string, _options?: Configuration): Promise<RequestContext>;
    getCourtTypes(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCourts(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCourtsForCourtLocation(courtLocationId: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCourtsForJurisdictionGeo(jurisdictionGeoId: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getCourtsServiceStatus(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getJudgeType(judgeTypeId: string, _options?: Configuration): Promise<RequestContext>;
    getJudgeTypes(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getJurisdictionGeo(jurisdictionGeoId: string, _options?: Configuration): Promise<RequestContext>;
    getJurisdictionGeoForCourt(courtId: string, pageNumber?: number, sort?: 'state', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getJurisdictionsGeo(q?: string, pageNumber?: number, sort?: 'state', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getPartyRole(partyRoleId: string, _options?: Configuration): Promise<RequestContext>;
    getPartyRoleGroup(partyRoleGroupId: string, _options?: Configuration): Promise<RequestContext>;
    getPartyRoleGroups(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
    getPartyRoles(q?: string, pageNumber?: number, sort?: 'name', order?: 'asc' | 'desc', _options?: Configuration): Promise<RequestContext>;
}
export declare class CourtStandardsAPIApiResponseProcessor {
    getAppealCourtsForCourtWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCourts200Response>>;
    getAreaOfLawWithHttpInfo(response: ResponseContext): Promise<HttpInfo<AreaOfLaw1>>;
    getAreasOfLawWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetAreasOfLaw200Response>>;
    getAttorneyRepresentationTypeWithHttpInfo(response: ResponseContext): Promise<HttpInfo<AttorneyRepresentationType1>>;
    getAttorneyRepresentationTypesWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetAttorneyRepresentationTypes200Response>>;
    getAttorneyTypeWithHttpInfo(response: ResponseContext): Promise<HttpInfo<AttorneyType1>>;
    getAttorneyTypesWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetAttorneyTypes200Response>>;
    getCaseClassWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CaseClass1>>;
    getCaseRelationshipTypeWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CaseRelationshipType1>>;
    getCaseRelationshipTypesWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCaseRelationshipTypes200Response>>;
    getCaseStatusWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CaseStatus1>>;
    getCaseStatusGroupWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CaseStatusGroup1>>;
    getCaseStatusGroupsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCaseStatusGroups200Response>>;
    getCaseTypeWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CaseType1>>;
    getCaseTypeGroupWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CaseTypeGroup1>>;
    getCaseTypeGroupsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCaseTypeGroups200Response>>;
    getCaseTypesWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCaseTypes200Response>>;
    getCasesClassWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCasesClass200Response>>;
    getCasesStatusWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCasesStatus200Response>>;
    getCauseOfActionWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CauseOfAction1>>;
    getCauseOfActionAdditionalDataWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CauseOfActionAdditionalData1>>;
    getCauseOfActionGroupWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CauseOfActionGroup1>>;
    getCausesOfActionWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCausesOfAction200Response>>;
    getCausesOfActionAdditionalDataWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCausesOfActionAdditionalData200Response>>;
    getCausesOfActionGroupWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCausesOfActionGroup200Response>>;
    getChargeWithHttpInfo(response: ResponseContext): Promise<HttpInfo<Charge1>>;
    getChargeAdditionalDataWithHttpInfo(response: ResponseContext): Promise<HttpInfo<ChargeAdditionalData1>>;
    getChargeDegreeWithHttpInfo(response: ResponseContext): Promise<HttpInfo<ChargeDegree1>>;
    getChargeGroupWithHttpInfo(response: ResponseContext): Promise<HttpInfo<ChargeGroup1>>;
    getChargeGroupsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetChargeGroups200Response>>;
    getChargeSeverityWithHttpInfo(response: ResponseContext): Promise<HttpInfo<ChargeSeverity1>>;
    getChargesWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCharges200Response>>;
    getChargesAdditionalDataWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetChargesAdditionalData200Response>>;
    getChargesDegreeWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetChargesDegree200Response>>;
    getChargesSeverityWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetChargesSeverity200Response>>;
    getCourtWithHttpInfo(response: ResponseContext): Promise<HttpInfo<Court1>>;
    getCourtLocationWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CourtLocation1>>;
    getCourtLocationsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CourtLocationResponse1>>;
    getCourtLocationsForCourtWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CourtLocationResponse1>>;
    getCourtServiceStatusWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCourtsServiceStatus200ResponseCourtServiceStatusArrayInner>>;
    getCourtSystemWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CourtSystem1>>;
    getCourtSystemsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCourtSystems200Response>>;
    getCourtTypeWithHttpInfo(response: ResponseContext): Promise<HttpInfo<CourtType1>>;
    getCourtTypesWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCourtTypes200Response>>;
    getCourtsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCourts200Response>>;
    getCourtsForCourtLocationWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCourts200Response>>;
    getCourtsForJurisdictionGeoWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCourts200Response>>;
    getCourtsServiceStatusWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetCourtsServiceStatus200Response>>;
    getJudgeTypeWithHttpInfo(response: ResponseContext): Promise<HttpInfo<JudgeType1>>;
    getJudgeTypesWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetJudgeTypes200Response>>;
    getJurisdictionGeoWithHttpInfo(response: ResponseContext): Promise<HttpInfo<JurisdictionGeo1>>;
    getJurisdictionGeoForCourtWithHttpInfo(response: ResponseContext): Promise<HttpInfo<JurisdictionGeoResponse1>>;
    getJurisdictionsGeoWithHttpInfo(response: ResponseContext): Promise<HttpInfo<JurisdictionGeoResponse1>>;
    getPartyRoleWithHttpInfo(response: ResponseContext): Promise<HttpInfo<PartyRole1>>;
    getPartyRoleGroupWithHttpInfo(response: ResponseContext): Promise<HttpInfo<PartyRoleGroup1>>;
    getPartyRoleGroupsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetPartyRoleGroups200Response>>;
    getPartyRolesWithHttpInfo(response: ResponseContext): Promise<HttpInfo<GetPartyRoles200Response>>;
}
